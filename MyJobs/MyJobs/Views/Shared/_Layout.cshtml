@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@using MyJobs.Core.Models.Notification
@using MyJobs.Infrastructure.Constants
@using MyJobs.Infrastructure.Data.Models.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - MyJobs</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/main.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/style.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/bootstrap.min.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/logo.css" asp-append-version="true" />
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" integrity="sha512-..." crossorigin="anonymous" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/2.1.3/toastr.min.js" integrity="sha512-lbwH47l/tPXJYG9AcFNoJaTMhGvYWhVM9YI43CT+uteTRRaiLCui8snIgyAN8XWgNjNhCqlAUdzZptso6OCoFQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/2.1.3/toastr.min.css" integrity="sha512-6S2HWzVFxruDlZxI3sXOZZ4/eJ8AcxkQH1+JjSe/ONCEqR9L4Ysq5JdT5ipqtzU7WHalNwzwBv+iE51gNHJNqQ==" crossorigin="anonymous" referrerpolicy="no-referrer" />
</head>
<body>
    <header>
        <partial name="_NotificationPartial" />
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm border-bottom box-shadow mb-3">
            <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">
                <img src="~/images/MyJobs.png" alt="MyJobs Logo" class="logo">
            </a>
            <div class="container-fluid">
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1 justify-content-center">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                        </li>
                        @if (User.Identity!.IsAuthenticated && User.IsInRole(RoleConstants.Employer))
                        {
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Jobs" asp-action="Create">Create Job</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Jobs" asp-action="ReceivedResumes">Received Resumes</a>
                            </li>
                        }

                        @if (User.Identity!.IsAuthenticated && User.IsInRole(RoleConstants.Employee))
                        {
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Resume" asp-action="Create">Create CV</a>
                            </li>
                        }
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Jobs" asp-action="All">All Jobs</a>
                        </li>
                    </ul>
                    @if (User.Identity.IsAuthenticated && User.IsInRole(RoleConstants.Employee))
                    {
                        string userId = User.FindFirstValue(ClaimTypes.NameIdentifier);
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" href="#" id="notificationsDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false"  data-user-id="@userId">
                             
                                <i class="fas fa-envelope fa-2x"></i>
                                <span class="badge rounded-pill badge-notification bg-danger" id="notificationsCount"></span>
                            </a>
                            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="notificationsDropdown">
                                <li>
                                    <div id="notificationsContainer"></div>
                                </li>
                            </ul>
                        </li>
                    }
                    <partial name="_LoginPartial" />
                </div>
            </div>
        </nav>
    </header>
    <div class="content-wrap">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container text-center">
            &copy; @DateTime.UtcNow.Year - MyJobs
        </div>
    </footer>

    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js"></script>

    <script>
        $(function() {
            var userId = $('#notificationsDropdown').data('user-id');

            if (userId) {
                loadNotifications();

                function loadNotifications() {
                    var cachedNotifications = sessionStorage.getItem('notifications_' + userId);
                    if (cachedNotifications) {
                        displayNotifications(JSON.parse(cachedNotifications));
                        return;
                    }

                    fetchNotifications();
                }

                function fetchNotifications() {
                    var token = $('input[name="__RequestVerificationToken"]').val();

                    $.ajax({
                        url: '@Url.Action("Notifications", "Profile")',
                        method: 'get',
                        headers: {
                            "RequestVerificationToken": token,
                            "User-ID": userId
                        },
                        success: function(data) {
                            updateCacheAndDisplayNotifications(data);
                        },
                        error: function() {
                            console.error('Error occurred while fetching notifications data.');
                        }
                    });
                }

                function updateCacheAndDisplayNotifications(notifications) {
                    sessionStorage.setItem('notifications_' + userId, JSON.stringify(notifications));
                    displayNotifications(notifications);
                }

                function displayNotifications(notifications) {
                    var container = $('#notificationsContainer');
                    var countContainer = $('#notificationsCount');

                    container.empty();

                    if (notifications.length > 0) {
                        countContainer.text(notifications.length);

                        $.each(notifications, function(index, notification) {
                            var notificationHtml =
                                '<a class="dropdown-item">' +
                                'From: ' + notification.sender + ', ' +
                                'Content: ' + notification.content + ' ' +
                                '<button class="btn btn-primary btn-sm mark-read-btn" data-notification-id="' + notification.id + '">Mark as Read</button>' +
                                '</a>';

                            container.append(notificationHtml);
                        });
                    } else {
                        container.append('<span class="dropdown-item">No new notifications</span>');
                        countContainer.text('');
                    }

                    $('.mark-read-btn').click(function() {
                        var notificationId = $(this).data('notification-id');
                        markNotificationAsRead(notificationId);
                    });
                }

                function markNotificationAsRead(id) {
                    var token = $('input[name="__RequestVerificationToken"]').val();

                    $.ajax({
                        url: '@Url.Action("MarkAsRead", "Profile")',
                        method: 'post',
                        headers: {
                            "RequestVerificationToken": token,
                            "User-ID": userId
                        },
                        data: { id: id },
                        success: function(response) {
                            var cachedNotifications = sessionStorage.getItem('notifications_' + userId);

                            if (cachedNotifications) {
                                var notifications = JSON.parse(cachedNotifications);
                                var updatedNotifications = notifications.filter(function(notification) {
                                    return notification.id !== id;
                                });

                                sessionStorage.setItem('notifications_' + userId, JSON.stringify(updatedNotifications));
                            }

                            loadNotifications();
                        },
                        error: function() {
                            console.error('Error occurred while marking notification as read.');
                        }
                    });
                }
            }
        });
    </script>

    @await RenderSectionAsync("Scripts", required: false)

</body>
</html>