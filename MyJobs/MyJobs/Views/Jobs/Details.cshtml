@using MyJobs.Core.Models.Job
@model SingleJobViewModel
@{
    this.ViewData["Title"] = @Model.Title;
    DateTime createdOn = Model.CreatedOn;
    TimeSpan daysSincePosted = DateTime.Today - createdOn.Date;
    int daysPostedAgo = (int)daysSincePosted.TotalDays;
    string postedAgoText;
    if (daysPostedAgo == 0)
    {
        postedAgoText = "Today";
    }
    else if (daysPostedAgo == 1)
    {
        postedAgoText = "1 day ago";
    }
    else
    {
        postedAgoText = $"{daysPostedAgo} days ago";
    }
}
<div class="job-post-company pt-120 pb-120">
    <div class="container">
        <div class="row justify-content-between">
            <div class="col-xl-7 col-lg-8">
                <div class="single-job-items mb-50">
                    <div class="job-items">
                        <div>
                            <h2 class="justify-content center">@this.ViewData["Title"]</h2>
                            @if (Model.IsOwner)
                            {
                                <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary">Edit</a>
                                <hr />
                                <form asp-action="Delete" id="deleteForm" asp-route-id="@Model.Id">
                                </form>
                                <button class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteConfirmationModal">Delete</button>
                            }
                            <hr />
                        </div>
                    </div>
                </div>

                <div class="job-post-details">
                    <div class="post-details1 mb-50">
                        <div class="small-section-tittle">
                            <h3>Job Description</h3>
                        </div>
                        <p>@Model.Description</p>
                    </div>
                    <div class="post-details2  mb-50">
                        <div class="small-section-tittle">
                            <h3>Required Knowledge, Skills, and Abilities</h3>
                        </div>
                        @foreach (var req in Model.Requirements.Split(';'))
                        {
                            if (!string.IsNullOrWhiteSpace(req))
                            {
                                <span>&#8226; @req.Trim()</span>
                                <br />
                            }
                        }
                    </div>
                    <div class="post-details2  mb-50">
                        <div class="small-section-tittle">
                            <h3>Responsibilities</h3>
                        </div>
                        @foreach (var req in Model.Responsibilities.Split(';'))
                        {
                            if (!string.IsNullOrWhiteSpace(req))
                            {
                                <span>&#8226; @req.Trim()</span>
                                <br />
                            }
                        }
                    </div>
                    <div class="post-details2  mb-50">
                        <div class="small-section-tittle">
                            <h3>Offering</h3>
                        </div>
                        @foreach (var req in Model.Offering.Split(';'))
                        {
                            if (!string.IsNullOrWhiteSpace(req))
                            {
                                <span>&#8226; @req.Trim()</span>
                                <br />
                            }
                        }
                    </div>
                </div>

            </div>
            <div class="col-xl-4 col-lg-4">
                <div class="post-details3  mb-50">
                    <div class="small-section-tittle">
                        <h4>Job Overview</h4>
                    </div>
                    <ul>
                        <li>Posted : <span>@postedAgoText</span></li>
                        <li>Location : <span>@Model.Town</span></li>
                        <li>Salary : <span>$@Model.Salary</span></li>
                        <li>Working Time : <span>@Model.WorkingTime</span></li>
                    </ul>
                    @if (!Model.IsOwner)
                    {
                        <div class="apply-btn2">
                            <a href="#" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#resumeSelectionModal">Apply Now</a>
                            @*<a asp-action="Apply" asp-route-id="@Model.Id" class="btn btn-primary">Apply Now</a>*@
                        </div>
                    }
                </div>
                <div class="post-details4  mb-50">
                    <div class="small-section-tittle">
                        <h4>Company Information</h4>
                    </div>
                    <ul>
                        <li>Name: <span>@Model.CompanyName </span></li>
                        <li>Employer Name:<span>@Model.EmployerFirstName @Model.EmployerLastName</span></li>
                        <li>Company Phone number:<span>@Model.PhoneNumber</span></li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal" tabindex="-1" role="dialog" id="deleteConfirmationModal">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Delete job</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete @Model.Title?</p>
            </div>
            <div class="modal-footer">
                <button type="submit" class="btn btn-danger" onclick="deleteForm.submit()">Delete</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal" tabindex="-1" role="dialog" id="resumeSelectionModal">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Select Resume</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Choose one of your resumes:</p>
                <!-- Add a form to submit the selected resume -->
                <form id="applyForm" asp-route-jobId="@Model.Id">
                    @Html.AntiForgeryToken()
                    <div id="resumesContainer">
                    </div>
                    <input type="hidden" id="jobId" name="jobId" value="@Model.Id" />
                    <input type="hidden" id="selectedResumeId" name="selectedResumeId" value="" />
                </form>
            </div>
            <div class="modal-footer">
                <!-- Call the JavaScript function to submit the form -->
                <button type="button" class="btn btn-primary" onclick="submitApplication()">Send</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        function loadUserResumes() {
            var token = $('input[name="__RequestVerificationToken"]').val();
            $.ajax({
                url: '/Profile/GetUserResumes',
                method: 'GET',
                dataType: 'json',
                success: function(data) {
                    const resumesContainer = $('#resumesContainer');
                    resumesContainer.empty();
                    let valuesArray = data.$values;

                    valuesArray.forEach(resume => {
                        const radioDiv = $('<div>').addClass('form-check');
                        const radioInput = $('<input>')
                            .addClass('form-check-input')
                            .attr('type', 'radio')
                            .attr('name', 'selectedResume')
                            .val(resume.Id);
                        const radioLabel = $('<label>')
                            .addClass('form-check-label')
                            .text(resume.Title);

                        radioDiv.append(radioInput);
                        radioDiv.append(radioLabel);

                        resumesContainer.append(radioDiv);
                    });

                },
                error: function(error) {
                    console.error('Error fetching user resumes:', error);
                }
            });
        }

        $('#resumeSelectionModal').on('show.bs.modal', function() {
            loadUserResumes();
        });


        function submitApplication() {
            var token = $('input[name="__RequestVerificationToken"]').val();
            // Get the selected resume ID
            const selectedResumeId = $('input[name="selectedResume"]:checked').val();

            console.log(selectedResumeId);

            if (!selectedResumeId) {
                alert('Please select a resume.');
                return;
            }

            $('#selectedResumeId').val(selectedResumeId);
            const formData = selectedResumeId;

            const form = $('#applyForm');
            $.ajax({
                url: '/Jobs/Apply',
                method: 'POST',
                data: form.serialize(),
                dataType: 'json',
                success: function(response) {
                    toastr.success(response.message);
                },
                error: function(error) {
                     console.error('Error response:', error.responseText);
                    toastr.error(error.responseJSON.message);
                }
            });

            $('#resumeSelectionModal').modal('hide');
        }
    </script>
}