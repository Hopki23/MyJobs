@model MyJobs.Core.Models.Job.JobsListViewModel
@{
    this.ViewData["Title"] = $"All Available Jobs, Page {Model.PageNumber}";
}

<h1 class='text-center'>@ViewData["Title"]</h1>
<hr />
<div class="d-flex justify-content-center">
    <div class="card">
        @foreach (var job in this.Model.Jobs!)
        {
            <div class="card-body">
                <h5 class="card-title">@job.Title</h5>
                <p class="card-text">@job.CategoryName</p>
                <a asp-action="GetById" asp-route-id="@job.Id" class="btn btn-primary">Details</a>
                <hr />
            </div>
        }
    </div>
</div>

<nav>
    <ul class="pagination justify-content-center">
        <li class="page-item @if(!Model.HasPreviousPage) {<text>disabled</text>}">
            <a class="page-link" asp-action="All" asp-route-page="@Model.PreviousPageNumber">Previous</a>
        </li>
        @for (int i = Model.PageNumber - 3; i < Model.PageNumber; i++)
        {
            if (i > 0)
            {
                <li class="page-item"><a class="page-link" asp-action="All" asp-route-page="@i">@i</a></li>
            }
        }
        <li class="page-item active">
            <span class="page-link">
                @Model.PageNumber
                <span class="sr-only"></span>
            </span>
        </li>
        @for (int i = Model.PageNumber + 1; i <= Model.PageNumber + 3; i++)
        {
            if (i <= Model.PagesCount)
            {
                <li class="page-item"><a class="page-link" asp-action="All" asp-route-page="@i">@i</a></li>
            }
        }
        <li class="page-item @if(!Model.HasNextPage) {<text>disabled</text>}">
            <a class="page-link" asp-action="All" asp-route-page="@Model.NextPageNumber">Next</a>
        </li>
    </ul>
</nav>